# -*- coding: UTF-8 -*-.
import argparse
import numpy as np
import sys
import operator
import os
import magic

def params():
    parser = argparse.ArgumentParser()
    parser.add_argument('files_location', help='Files Location')
    params = parser.parse_args()
    return params.files_location

def type_distribution(location):
    types = {}
    for root, dirs, files in os.walk(location):
        for f in sorted(files):
            current_folder = root.split("/")[5]
            year = current_folder.split("-")[0]
            file_loc = os.path.join(root, f)
            # m=magic.open(magic.MAGIC_NONE)
            # m.load()
            # print file_loc, m.file(file_loc)
            t = f.split(".")[-1]
            # print int(year), ' ', t
            if year != "":
                if year in types.keys():
                    if t in types[year].keys():
                        types[year][t] += 1
                    else:
                        types[year][t] = 0
                else:
                    types[year] = {}
                    types[year][t] = 0
    return types

files_location = params()

types = type_distribution(files_location)

for k in types:
    print '------------- ', k, ' -------------'
    sorted_types = sorted(types[k].items(), key=operator.itemgetter(1))
    sorted_types.reverse()
    # print sorted_types

    for i in sorted_types:
        print i[0] + '\t' + str(i[1])
