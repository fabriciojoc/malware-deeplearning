# -*- coding: UTF-8 -*-.
import argparse
import numpy as np
import sys
import operator
sys.path.append("./lib")
from common import read_file, cross_validation, hot_enconding, concatenate_features, concatenate_features_w2v, prob_to_class, prob_to_class_threshold, headers, random_samples, read_ymd_csvs

def params():
    parser = argparse.ArgumentParser()
    parser.add_argument('malwares_csv', help='Malwares CSVs Location')
    params = parser.parse_args()
    return params.malwares_csv

mw_csv = params()

mw_features, mw_identifiers, mw_dlls, mw_symbols, years = read_ymd_csvs(mw_csv)

symbols = {}

for mw_s in mw_dlls:
    l = mw_s.split(" ")
    l_s = set(l)
    l = list(l_s)
    print l
    for s in l:
        if s in symbols.keys():
            symbols[s]=symbols[s]+1
        else:
            symbols[s]=1

sorted_symbols = sorted(symbols.items(), key=operator.itemgetter(1))
sorted_symbols.reverse()
print sorted_symbols

for i in sorted_symbols:
    print i[0] + '\t' + str(i[1])
